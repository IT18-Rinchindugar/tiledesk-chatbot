const bot = {
	"webhook_enabled": false,
	"language": "en",
	"name": "Your bot",
	"type": "tilebot",
	"intents": [{
		"webhook_enabled": false,
		"enabled": true,
		"language": "en",
		"intent_display_name": "moveinattributes",
		"intent_id": "00f93b97-89ee-466d-a09c-e47a18943057",
		"form": {},
		"question": "",
		"actions": [{
			"_tdActionTitle": "returns a json body - GET - assign result - assign status - no condition",
			"url": "http://localhost:10002/test/webrequest/get/json",
			"headersString": {
				"Content-Type": "*/*",
				"Cache-Control": "no-cache",
				"User-Agent": "TiledeskBotRuntime"
			},
			"assignResultTo": "var1",
			"assignStatusTo": "status1",
			"method": "GET",
			"_tdActionType": "webrequestv2"
		}, {
			"_tdActionTitle": "Move in Attributes action",
			"_tdActionType": "move_in_attributes",
			"attributeName": "var1",
		}, {
			"_tdActionTitle": "reply check action",
			"_tdActionType": "reply",
			"attributes": {
				"disableInputMessage": false,
				"commands": [{
					"type": "wait",
					"time": 500
				}, {
					"type": "message",
					"message": {
						"type": "text",
						"text": "result assigned to: {{var1}} but his properties a injected in attributes. City: {{city}} and Age: TODO"
					}
				}]
			},
			"text": "..."
		}]
	}]
}

// normalize the bot structure for the static intent search
let intents = bot.intents;
delete bot.intents;
let intents_dict_by_display_name = {};
for (let i = 0; i < intents.length; i++) {
	intents_dict_by_display_name[intents[i].intent_display_name] = intents[i];
}
let intents_dict_by_intent_id = {};
for (let i = 0; i < intents.length; i++) {
	intents_dict_by_intent_id[intents[i].intent_id] = intents[i];
}
bot.intents = intents_dict_by_display_name;
bot.intents_by_intent_id = intents_dict_by_intent_id
const bots_data = {
  "bots": {}
}
bots_data.bots["botID"] = bot;

module.exports = { bots_data: bots_data };