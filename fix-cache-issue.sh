#!/bin/bash

echo "üîß Cache –±–æ–ª–æ–Ω Bot configuration –∑–∞—Å–∞–∂ –±–∞–π–Ω–∞..."

echo "1Ô∏è‚É£ MongoDB-–¥ bot configuration —à–∏–Ω—ç—á–ª—ç–∂ –±–∞–π–Ω–∞..."
docker-compose exec mongodb mongosh -u admin -p password123 --eval "
use tiledesk;

// –ë“Ø—Ö bot-—É—É–¥—ã–≥ —Ö–∞—Ä–∞—Ö
print('üìã –û–¥–æ–æ–≥–∏–π–Ω bot-—É—É–¥:');
db.faq_kbs.find({name: 'itrader'}, {_id: 1, name: 1, intentsEngine: 1, trashed: 1}).forEach(printjson);

// Trashed bot-—É—É–¥—ã–≥ –∑–∞—Å–∞—Ö
print('üóëÔ∏è Trashed bot-—É—É–¥—ã–≥ —Å—ç—Ä–≥—ç—ç–∂ –±–∞–π–Ω–∞...');
db.faq_kbs.updateMany(
  {name: 'itrader', trashed: true},
  {\$set: {trashed: false, intentsEngine: 'tiledesk-ai'}}
);

// –ë“Ø—Ö itrader bot-—É—É–¥–∞–¥ NLP engine –∏–¥—ç–≤—Ö–∂“Ø“Ø–ª—ç—Ö
print('ü§ñ NLP engine –∏–¥—ç–≤—Ö–∂“Ø“Ø–ª–∂ –±–∞–π–Ω–∞...');
var result = db.faq_kbs.updateMany(
  {name: 'itrader'},
  {\$set: {intentsEngine: 'tiledesk-ai', trashed: false}}
);

print('‚úÖ Update result:', result);

// –®–∏–Ω—ç—á–ª—ç–≥–¥—Å—ç–Ω bot-—É—É–¥—ã–≥ —Ö–∞—Ä–∞—Ö
print('üîç –®–∏–Ω—ç—á–ª—ç–≥–¥—Å—ç–Ω bot-—É—É–¥:');
db.faq_kbs.find({name: 'itrader'}, {_id: 1, name: 1, intentsEngine: 1, trashed: 1}).forEach(printjson);
"

echo ""
echo "2Ô∏è‚É£ Cache –±“Ø—Ä—ç–Ω —Ü—ç–≤—ç—Ä–ª—ç–∂ –±–∞–π–Ω–∞..."
docker-compose exec redis redis-cli -a redis123 FLUSHALL

echo ""
echo "3Ô∏è‚É£ Chatbot container restart —Ö–∏–π–∂ –±–∞–π–Ω–∞..."
docker-compose restart tiledesk-chatbot

echo ""
echo "4Ô∏è‚É£ 10 —Å–µ–∫—É–Ω–¥ —Ö“Ø–ª—ç—ç–∂ –±–∞–π–Ω–∞..."
sleep 10

echo ""
echo "5Ô∏è‚É£ Logs —à–∞–ª–≥–∞–∂ –±–∞–π–Ω–∞..."
echo "üîç IntentsEngine configuration:"
docker-compose logs --tail=50 tiledesk-chatbot | grep -i "intentsEngine\|tiledesk-ai\|MongodbIntentsMachine" | tail -5

echo ""
echo "‚úÖ –ë“Ø–≥–¥ –¥—É—É—Å–ª–∞–∞! –û–¥–æ–æ 'what is the expert trader?' –≥—ç–∂ —Ç—É—Ä—à–∏–∂ “Ø–∑—ç—ç—Ä—ç–π."

